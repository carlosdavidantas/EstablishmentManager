// <auto-generated />
using System;
using EstablishmentManagerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstablishmentManagerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creation_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit_on_establishment")
                        .HasColumnType("decimal");

                    b.Property<decimal>("Debit_on_establishment")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client_address", b =>
                {
                    b.Property<int>("Client_addressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_addressId"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Client_addressId");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Addresses");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client_telephone", b =>
                {
                    b.Property<int>("Client_telephoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_telephoneId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Client_telephoneId");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Telephones");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Group_of_product", b =>
                {
                    b.Property<int>("Group_of_productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Group_of_productId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost_price")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sell_price")
                        .HasColumnType("decimal");

                    b.HasKey("Group_of_productId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Group_of_products");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost_price")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group_of_productId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sell_price")
                        .HasColumnType("decimal");

                    b.HasKey("ProductId");

                    b.HasIndex("Group_of_productId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product_addon", b =>
                {
                    b.Property<int>("Product_addonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_addonId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost_price")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sell_price")
                        .HasColumnType("decimal");

                    b.HasKey("Product_addonId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_addons");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product_observation", b =>
                {
                    b.Property<int>("Product_observationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_observationId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Product_observationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_observations");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sell_price")
                        .HasColumnType("decimal");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<DateTime>("Added_to_stock")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_product")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.MoneyRelated.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<string>("Payment_info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.MoneyRelated.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime>("Hour")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<DateTime>("Creation_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creation_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_client")
                        .HasColumnType("int");

                    b.Property<int>("Id_deliveryman_employee")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tax_value")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("Time_deliveryman_arrived")
                        .HasColumnType("datetime2");

                    b.HasKey("DeliveryId");

                    b.ToTable("Deliverys");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Client_name_note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<int>("Id_delivery")
                        .HasColumnType("int");

                    b.Property<int>("Id_table")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("Table_id")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<DateTime>("Initial_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time_spent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Usage_date")
                        .HasColumnType("datetime2");

                    b.HasKey("TableId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.UserRelated.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_user")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.UserRelated.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.UserRelated.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Id_permission")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client_address", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.ClientRelated.Client", "Client")
                        .WithMany("Client_addresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client_telephone", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.ClientRelated.Client", "Client")
                        .WithMany("Client_Telephones")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Group_of_product", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.InventoryRelated.Promotion", "Promotion")
                        .WithMany("Group_of_products")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.InventoryRelated.Group_of_product", "Group_of_product")
                        .WithMany("Products")
                        .HasForeignKey("Group_of_productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstablishmentManagerLibrary.Models.InventoryRelated.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group_of_product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product_addon", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.InventoryRelated.Product", "Product")
                        .WithMany("Product_addons")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product_observation", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.InventoryRelated.Product", "Product")
                        .WithMany("Product_observations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.MoneyRelated.Payment", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.OrdersRelated.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstablishmentManagerLibrary.Models.MoneyRelated.Transaction", "Transaction")
                        .WithMany("Payment")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Order", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.OrdersRelated.Delivery", "Delivery")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstablishmentManagerLibrary.Models.OrdersRelated.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.UserRelated.Permission", b =>
                {
                    b.HasOne("EstablishmentManagerLibrary.Models.UserRelated.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.ClientRelated.Client", b =>
                {
                    b.Navigation("Client_Telephones");

                    b.Navigation("Client_addresses");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Group_of_product", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Product", b =>
                {
                    b.Navigation("Product_addons");

                    b.Navigation("Product_observations");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.InventoryRelated.Promotion", b =>
                {
                    b.Navigation("Group_of_products");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.MoneyRelated.Transaction", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Delivery", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Order", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.OrdersRelated.Table", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EstablishmentManagerLibrary.Models.UserRelated.User", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
